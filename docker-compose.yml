version: "3.4"

services:

  techChallengeMSSQL:
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart: always
    container_name: techChallengeMSSQL
    ports: 
      - "1433:1433"
    environment:
      SA_PASSWORD: "MyDB@123"
      ACCEPT_EULA: "Y"
    healthcheck:
      test: ["CMD-SHELL", "sqlcmd -S localhost -U sa -P MyDB@123 -Q 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - techChallengeNetwork

  api-techChallenge:
    image: api-techchallenge:latest
    container_name: tech-challenge-api
    build:
      context: .
      dockerfile: ./src/TechChallengeFiap.Application/Dockerfile #onde esta meu dockerfile
    restart: always
    ports:
      - 8000:80
    environment:
      - "ConnectionStrings:ConnectionSQLServer=Server=techChallengeMSSQL,1433;Database=TechChallengeFiap;User Id=sa;Password=MyDB@123;Encrypt=False"
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - USE_HTTPS_REDIRECTION=false
    depends_on:
      - techChallengeMQ
      - techChallengeMSSQL
    networks:
      - techChallengeNetwork

# email-techChallenge:
#    image: email-techchallenge:latest
#    container_name: email-challenge-api
#    build:
#      context: ../src
#      dockerfile: ./src/TechChallengeFiap.Email #onde esta meu dockerfile
#    restart: always
#    environment:
#      ASPNETCORE_ENVIRONMENT: Development
#      ASPNETCORE_URLS: "https://+:8082;http://+:8083"
#      USE_HTTPS_REDIRECTION: "false"
#    depends_on:
#      - rabbitmq

  techChallengeMQ:
    image: rabbitmq:3-management
    container_name: techChallengeMQ
    restart: always
    ports:
      - "30000:30000"
    networks:
      - techChallengeNetwork

networks:
  techChallengeNetwork:
    driver: bridge